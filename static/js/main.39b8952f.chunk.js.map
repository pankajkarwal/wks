{"version":3,"sources":["logo.svg","components/Workform.js","App.js","reportWebVitals.js","index.js"],"names":["yup","shape","wdate","required","min","Workform","useForm","handleSubmit","register","errors","control","watch","startDate","endDate","useState","frmdata","setFrmdata","whr","setWhr","onSubmit","formData","newTodos","console","log","hourDiff","todatetime","getTime","fromdatetime","minDiff","hDiff","humanReadable","hours","Math","floor","minutes","className","htmlFor","name","innerRef","render","onChange","onBlur","value","selected","dateFormat","showTimeSelect","message","type","placeholder","round","readOnly","map","i","x","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"qMAAe,I,sECcAA,MAAaC,MAAM,CAChCC,MAAOF,MAEJG,WACAC,IAAI,KAqHMC,MAnHf,WAAqB,IAAD,EACyCC,cAAnDC,EADU,EACVA,aAAcC,EADJ,EACIA,SAAUC,EADd,EACcA,OAAQC,EADtB,EACsBA,QADtB,GAEaC,EAFb,EAC+BA,OACZ,CAAC,YAAa,YAFjC,KAEVC,UAFU,EAECC,QACWC,mBAAS,KAHrB,mBAGXC,EAHW,KAGFC,EAHE,OAIIF,mBAAS,IAJb,mBAIXG,EAJW,KAINC,EAJM,KAmClB,OACE,qCACE,+DAEA,uBAAMC,SAAUZ,GAjCH,SAAAa,GACf,IAAMC,EAAQ,CAAID,GAAJ,mBAAiBL,IAC/BC,EAAWK,GACXC,QAAQC,IAAIR,GACZ,IAAIS,EACFJ,EAASK,WAAWC,UAAYN,EAASO,aAAaD,UAEpDE,EAAUJ,EAAW,GAAK,IAC1BK,EAAQL,EAAW,KAAO,IAC1BM,EAAgB,GACpBA,EAAcC,MAAQC,KAAKC,MAAMJ,GACjCC,EAAcI,QAAUN,EAAU,GAAKE,EAAcC,MAerDb,EAAOY,MAOL,UACE,sBAAKK,UAAU,aAAf,UACE,uBAAOC,QAAQ,OAAf,wBACA,cAAC,IAAD,CACE1B,QAASA,EACT2B,KAAK,eACLC,SAAU9B,EACV+B,OAAQ,kBAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,MAArB,EAA4BC,SAA5B,OACN,cAAC,KAAD,GACEC,WAAW,kBACXC,gBAAc,GAFhB,2BAGa,MAHb,0DAKYL,GALZ,uBAMUC,GANV,yBAOYC,GAPZ,UAYLjC,EAAOkB,cACN,mBAAGQ,UAAU,qBAAb,SAAmC1B,EAAOkB,aAAamB,UAEzD,sBAAKX,UAAU,aAAf,UACE,6CACA,cAAC,IAAD,CACEzB,QAASA,EACT2B,KAAK,aACLC,SAAU9B,EACV+B,OAAQ,kBAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,MAArB,EAA4BC,SAA5B,OACN,cAAC,KAAD,GACEC,WAAW,kBACXC,gBAAc,GAFhB,2BAGa,MAHb,0DAKYL,GALZ,uBAMUC,GANV,yBAOYC,GAPZ,UAaN,sBAAKP,UAAU,aAAf,UACE,gDACA,uBACEY,KAAK,OACLZ,UAAU,eACVa,YAAY,cACZN,MACe,MAAbzB,EAAIc,MACAd,EAAIc,MACJ,cACAC,KAAKiB,MAAMhC,EAAIiB,QAAS,GACxB,WACA,KAENgB,SAAS,WACTb,KAAK,WAIT,wBAAQU,KAAK,SAAb,oBACA,8CACA,6BACc,MAAXhC,EACGA,EAAQoC,KAAI,SAACC,EAAGC,OAGhB,Y,OCzGCC,MAZf,WACE,OACE,8BACE,qBAAKnB,UAAU,iBAAf,SACE,qBAAKA,UAAU,+DAAf,SACE,cAAC,EAAD,WCJKoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASzB,OACP,cAAC,IAAM0B,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.39b8952f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel\r\n} from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { formatDistanceToNow } from \"date-fns/esm\";\r\n\r\nconst Schema = yup.object().shape({\r\n  wdate: yup\r\n    .string()\r\n    .required()\r\n    .min(3)\r\n});\r\nfunction Workform() {\r\n  const { handleSubmit, register, errors, control, watch } = useForm();\r\n  const { startDate, endDate } = watch([\"startDate\", \"endDate\"]);\r\n  const [frmdata, setFrmdata] = useState([]);\r\n  const [whr, setWhr] = useState(\"\");\r\n\r\n  const onSubmit = formData => {\r\n    const newTodos = [formData, ...frmdata];\r\n    setFrmdata(newTodos);\r\n    console.log(frmdata);\r\n    var hourDiff =\r\n      formData.todatetime.getTime() - formData.fromdatetime.getTime(); //in ms\r\n    var secDiff = hourDiff / 1000; //in s\r\n    var minDiff = hourDiff / 60 / 1000; //in minutes\r\n    var hDiff = hourDiff / 3600 / 1000; //in hours\r\n    var humanReadable = {};\r\n    humanReadable.hours = Math.floor(hDiff);\r\n    humanReadable.minutes = minDiff - 60 * humanReadable.hours;\r\n    /*fetch(\"http://localhost/wks/pk.php\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        title: \"Pankaj\",\r\n        body: \"Some Text\",\r\n        userid: 2\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/json;charset=UTF-8\"\r\n      }\r\n    })\r\n      .then(response => response.json)\r\n      .then(json => console.log(json));\r\n*/\r\n    setWhr(humanReadable);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1> Welcome to Work Keeping form</h1>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"date\"> From Date</label>\r\n          <Controller\r\n            control={control}\r\n            name=\"fromdatetime\"\r\n            innerRef={register}\r\n            render={({ onChange, onBlur, value, selected }) => (\r\n              <DatePicker\r\n                dateFormat=\"dd-MM-yyyy h:mm\"\r\n                showTimeSelect\r\n                dateFormat=\"Pp\"\r\n                selectsStart\r\n                onChange={onChange}\r\n                onBlur={onBlur}\r\n                selected={value}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        {errors.fromdatetime && (\r\n          <p className=\"alert alert-danger\">{errors.fromdatetime.message}</p>\r\n        )}\r\n        <div className=\"form-group\">\r\n          <label>End Date</label>\r\n          <Controller\r\n            control={control}\r\n            name=\"todatetime\"\r\n            innerRef={register}\r\n            render={({ onChange, onBlur, value, selected }) => (\r\n              <DatePicker\r\n                dateFormat=\"dd-MM-yyyy h:mm\"\r\n                showTimeSelect\r\n                dateFormat=\"Pp\"\r\n                selectsStart\r\n                onChange={onChange}\r\n                onBlur={onBlur}\r\n                selected={value}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Total Hours</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Total Hours\"\r\n            value={\r\n              whr.hours != null\r\n                ? whr.hours +\r\n                  \" hours and \" +\r\n                  Math.round(whr.minutes, 2) +\r\n                  \" minutes\"\r\n                : null\r\n            }\r\n            readOnly=\"readonly\"\r\n            name=\"hrs\"\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\">Submit</button>\r\n        <h1>Form Listing</h1>\r\n        <ul>\r\n          {frmdata != null\r\n            ? frmdata.map((i, x) => {\r\n                <li id={i}>{x}</li>;\r\n              })\r\n            : \"\"}\r\n        </ul>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Workform;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Workform from \"./components/Workform\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Form,\n  Button,\n  FormGroup,\n  FormControl,\n  ControlLabel\n} from \"react-bootstrap\";\nfunction App() {\n  return (\n    <div>\n      <div className=\"container py-5\">\n        <div className=\"card border-0 shadow text-white text-center p-4 w-55 mx-auto\">\n          <Workform />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}